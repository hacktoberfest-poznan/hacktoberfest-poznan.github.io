{
  "_args": [
    [
      {
        "raw": "is-unc-path@^1.0.0",
        "scope": null,
        "escapedName": "is-unc-path",
        "name": "is-unc-path",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/alorenc/Documents/projects/hacktoberfest-poznan.github.io/node_modules/is-relative"
    ]
  ],
  "_from": "is-unc-path@>=1.0.0 <2.0.0",
  "_id": "is-unc-path@1.0.0",
  "_inCache": true,
  "_location": "/is-unc-path",
  "_nodeVersion": "7.7.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/is-unc-path-1.0.0.tgz_1499932646815_0.1278308816254139"
  },
  "_npmUser": {
    "name": "jonschlinkert",
    "email": "github@sellside.com"
  },
  "_npmVersion": "5.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "is-unc-path@^1.0.0",
    "scope": null,
    "escapedName": "is-unc-path",
    "name": "is-unc-path",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/is-relative"
  ],
  "_resolved": "https://registry.npmjs.org/is-unc-path/-/is-unc-path-1.0.0.tgz",
  "_shasum": "d731e8898ed090a12c352ad2eaed5095ad322c9d",
  "_shrinkwrap": null,
  "_spec": "is-unc-path@^1.0.0",
  "_where": "/Users/alorenc/Documents/projects/hacktoberfest-poznan.github.io/node_modules/is-relative",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/is-unc-path/issues"
  },
  "dependencies": {
    "unc-path-regex": "^0.1.2"
  },
  "description": "Returns true if a filepath is a windows UNC file path.",
  "devDependencies": {
    "gulp-format-md": "^1.0.0",
    "mocha": "^3.4.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-mrGpVd0fs7WWLfVsStvgF6iEJnbjDFZh9/emhRDcGWTduTfNHd9CHeUwH3gYIjdbwo4On6hunkztwOaAw0yllQ==",
    "shasum": "d731e8898ed090a12c352ad2eaed5095ad322c9d",
    "tarball": "https://registry.npmjs.org/is-unc-path/-/is-unc-path-1.0.0.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "06baedec306bcbca8c9ee435db80a0e566764fd0",
  "homepage": "https://github.com/jonschlinkert/is-unc-path",
  "keywords": [
    "absolute",
    "expression",
    "file",
    "filepath",
    "is",
    "match",
    "matching",
    "path",
    "regex",
    "regexp",
    "regular",
    "unc",
    "win",
    "windows"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jonschlinkert",
      "email": "github@sellside.com"
    }
  ],
  "name": "is-unc-path",
  "optionalDependencies": {},
  "readme": "# is-unc-path [![NPM version](https://img.shields.io/npm/v/is-unc-path.svg?style=flat)](https://www.npmjs.com/package/is-unc-path) [![NPM monthly downloads](https://img.shields.io/npm/dm/is-unc-path.svg?style=flat)](https://npmjs.org/package/is-unc-path) [![NPM total downloads](https://img.shields.io/npm/dt/is-unc-path.svg?style=flat)](https://npmjs.org/package/is-unc-path) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/is-unc-path.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/is-unc-path)\n\n> Returns true if a filepath is a windows UNC file path.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save is-unc-path\n```\n\n## Usage\n\n```js\nvar isUncPath = require('is-unc-path');\n```\n\n**true**\n\nReturns true for windows UNC paths:\n\n```js\nisUncPath('\\\\/foo/bar');\nisUncPath('\\\\\\\\foo/bar');\nisUncPath('\\\\\\\\foo\\\\admin$');\nisUncPath('\\\\\\\\foo\\\\admin$\\\\system32');\nisUncPath('\\\\\\\\foo\\\\temp');\nisUncPath('\\\\\\\\/foo/bar');\nisUncPath('\\\\\\\\\\\\/foo/bar');\n```\n\n**false**\n\nReturns false for non-UNC paths:\n\n```js\nisUncPath('/foo/bar');\nisUncPath('/');\nisUncPath('/foo');\nisUncPath('/foo/');\nisUncPath('c:');\nisUncPath('c:.');\nisUncPath('c:./');\nisUncPath('c:./file');\nisUncPath('c:/');\nisUncPath('c:/file');\n```\n\n**Customization**\n\nUse `.source` to use the regex as a component of another regex:\n\n```js\nvar myRegex = new RegExp(isUncPath.source + 'foo');\n```\n\n**[Rules for UNC paths](http://resources.esri.com/help/9.3/ArcGISDesktop/com/Gp_ToolRef/sharing_tools_and_toolboxes/pathnames_explained_colon_absolute_relative_unc_and_url.htm)**\n\n* The computer name is always preceded by a double backward-slash (`\\\\`).\n* UNC paths cannot contain a drive letter (such as `D:`)\n\n## Release history\n\n### v1.0.0 - 2017-07-12\n\n**Changes**\n\n* now throws a `TypeError` if value is not a string\n\n## About\n\n### Related projects\n\n* [is-absolute](https://www.npmjs.com/package/is-absolute): Polyfill for node.js `path.isAbolute`. Returns true if a file path is absolute. | [homepage](https://github.com/jonschlinkert/is-absolute \"Polyfill for node.js `path.isAbolute`. Returns true if a file path is absolute.\")\n* [is-glob](https://www.npmjs.com/package/is-glob): Returns `true` if the given string looks like a glob pattern or an extglob pattern… [more](https://github.com/jonschlinkert/is-glob) | [homepage](https://github.com/jonschlinkert/is-glob \"Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a bet\")\n* [is-relative](https://www.npmjs.com/package/is-relative): Returns `true` if the path appears to be relative. | [homepage](https://github.com/jonschlinkert/is-relative \"Returns `true` if the path appears to be relative.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright © 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on July 13, 2017._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/is-unc-path.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "verb": {
    "toc": false,
    "layout": "default",
    "tasks": [
      "readme"
    ],
    "plugins": [
      "gulp-format-md"
    ],
    "lint": {
      "reflinks": true
    },
    "related": {
      "list": [
        "is-relative",
        "is-absolute",
        "is-glob"
      ]
    }
  },
  "version": "1.0.0"
}
