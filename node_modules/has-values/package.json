{
  "_args": [
    [
      {
        "raw": "has-values@^1.0.0",
        "scope": null,
        "escapedName": "has-values",
        "name": "has-values",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/alorenc/Documents/projects/hacktoberfest-poznan.github.io/node_modules/has-value"
    ]
  ],
  "_from": "has-values@>=1.0.0 <2.0.0",
  "_id": "has-values@1.0.0",
  "_inCache": true,
  "_location": "/has-values",
  "_nodeVersion": "7.7.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/has-values-1.0.0.tgz_1495219418678_0.2592258816584945"
  },
  "_npmUser": {
    "name": "jonschlinkert",
    "email": "github@sellside.com"
  },
  "_npmVersion": "4.6.1",
  "_phantomChildren": {
    "is-buffer": "1.1.6"
  },
  "_requested": {
    "raw": "has-values@^1.0.0",
    "scope": null,
    "escapedName": "has-values",
    "name": "has-values",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/has-value"
  ],
  "_resolved": "https://registry.npmjs.org/has-values/-/has-values-1.0.0.tgz",
  "_shasum": "95b0b63fec2146619a6fe57fe75628d5a39efe4f",
  "_shrinkwrap": null,
  "_spec": "has-values@^1.0.0",
  "_where": "/Users/alorenc/Documents/projects/hacktoberfest-poznan.github.io/node_modules/has-value",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/has-values/issues"
  },
  "dependencies": {
    "is-number": "^3.0.0",
    "kind-of": "^4.0.0"
  },
  "description": "Returns true if any values exist, false if empty. Works for booleans, functions, numbers, strings, nulls, objects and arrays. ",
  "devDependencies": {
    "gulp-format-md": "^0.1.12",
    "mocha": "^3.4.1"
  },
  "directories": {},
  "dist": {
    "shasum": "95b0b63fec2146619a6fe57fe75628d5a39efe4f",
    "tarball": "https://registry.npmjs.org/has-values/-/has-values-1.0.0.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "fead695044aafcfb337c7125af5479c7eaf1c92c",
  "homepage": "https://github.com/jonschlinkert/has-values",
  "keywords": [
    "array",
    "boolean",
    "empty",
    "find",
    "function",
    "has",
    "hasOwn",
    "javascript",
    "js",
    "key",
    "keys",
    "node.js",
    "null",
    "number",
    "object",
    "properties",
    "property",
    "string",
    "type",
    "util",
    "utilities",
    "utility",
    "value",
    "values"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jonschlinkert",
      "email": "github@sellside.com"
    }
  ],
  "name": "has-values",
  "optionalDependencies": {},
  "readme": "# has-values [![NPM version](https://img.shields.io/npm/v/has-values.svg?style=flat)](https://www.npmjs.com/package/has-values) [![NPM monthly downloads](https://img.shields.io/npm/dm/has-values.svg?style=flat)](https://npmjs.org/package/has-values) [![NPM total downloads](https://img.shields.io/npm/dt/has-values.svg?style=flat)](https://npmjs.org/package/has-values) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/has-values.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/has-values)\n\n> Returns true if any values exist, false if empty. Works for booleans, functions, numbers, strings, nulls, objects and arrays.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save has-values\n```\n\n## Usage\n\n```js\nvar hasValue = require('has-values');\n\nhasValue('a');\n//=> true\n\nhasValue('');\n//=> false\n\nhasValue(1);\n//=> true\n\nhasValue(0);\n//=> false\n\nhasValue({a: 'a'}});\n//=> true\n\nhasValue({});\nhasValue({foo: undefined});\n//=> false\n\nhasValue({foo: null});\n//=> true\n\nhasValue(['a']);\n//=> true\n\nhasValue([]);\nhasValue([[], []]);\nhasValue([[[]]]);\n//=> false\n\nhasValue(['foo']);\nhasValue([0]);\n//=> true\n\nhasValue(function(foo) {}); \n//=> true\n\nhasValue(function() {});\n//=> true\n\nhasValue(true);\n//=> true\n\nhasValue(false);\n//=> true\n```\n\n## isEmpty\n\nTo test for empty values, do:\n\n```js\nfunction isEmpty(o, isZero) {\n  return !hasValue(o, isZero);\n}\n```\n\n## Release history\n\n### v1.0.0\n\n* `zero` always returns true\n* `array` now recurses, so that an array of empty arrays will return `false`\n* `null` now returns true\n\n## About\n\n### Related projects\n\n* [has-value](https://www.npmjs.com/package/has-value): Returns true if a value exists, false if empty. Works with deeply nested values using… [more](https://github.com/jonschlinkert/has-value) | [homepage](https://github.com/jonschlinkert/has-value \"Returns true if a value exists, false if empty. Works with deeply nested values using object paths.\")\n* [is-number](https://www.npmjs.com/package/is-number): Returns true if the value is a number. comprehensive tests. | [homepage](https://github.com/jonschlinkert/is-number \"Returns true if the value is a number. comprehensive tests.\")\n* [is-plain-object](https://www.npmjs.com/package/is-plain-object): Returns true if an object was created by the `Object` constructor. | [homepage](https://github.com/jonschlinkert/is-plain-object \"Returns true if an object was created by the `Object` constructor.\")\n* [isobject](https://www.npmjs.com/package/isobject): Returns true if the value is an object and not an array or null. | [homepage](https://github.com/jonschlinkert/isobject \"Returns true if the value is an object and not an array or null.\")\n* [kind-of](https://www.npmjs.com/package/kind-of): Get the native type of a value. | [homepage](https://github.com/jonschlinkert/kind-of \"Get the native type of a value.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright © 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on May 19, 2017._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/has-values.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "verb": {
    "run": true,
    "toc": false,
    "layout": "default",
    "tasks": [
      "readme"
    ],
    "plugins": [
      "gulp-format-md"
    ],
    "related": {
      "list": [
        "has-value",
        "kind-of",
        "is-number",
        "is-plain-object",
        "isobject"
      ]
    },
    "reflinks": [
      "verb"
    ],
    "lint": {
      "reflinks": true
    }
  },
  "version": "1.0.0"
}
